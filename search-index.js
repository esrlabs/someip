var searchIndex = JSON.parse('{\
"someip_messages":{"doc":"Crate for parsing the SOME/IP network protocol (without …","t":"GNNEENGNNDDEGGNNNNNNNNNNESIGNEDEGGNNNNNNNNGNDNNNNENGNDEDGEDDDGGNNNNNNNNNNNGNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMLLMLLLMMMLLLMMLMMMLLMMLLMLLLLLMLLMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMM","n":["ClientId","CookieClient","CookieServer","EntriesType","Error","Error","EventgroupId","FindService","FindService","Header","HeaderBuilder","HeaderBuilderError","InstanceId","InterfaceVersion","InvalidIpProto","InvalidLengthField","InvalidMessageType","InvalidReturnCode","InvalidUrl","Io","Ip4Multicast","Ip4Unicast","Ip6Multicast","Ip6Unicast","IpProto","LENGTH","Length","MajorVersion","MalformedMessage","Message","MessageId","MessageType","MethodId","MinorVersion","NotEnoughData","NotOk","NotReachable","NotReady","Notification","OfferService","OfferService","Ok","ProtocolVersion","Request","RequestId","RequestNoReturn","ReservedGeneric","ReservedSpecific","Response","ReturnCode","Rpc","RpcPayload","Sd","SdEndpointOption","SdEntry","SdEventgroupEntry","SdFlags","SdOption","SdOptionRef","SdPayload","SdServiceEntry","ServiceId","SessionId","SubscribeEventgroup","SubscribeEventgroup","SubscribeEventgroupACK","SubscribeEventgroupAck","TCP","Timeout","TpError","TpNotification","TpRequest","TpRequestNoReturn","TpResponse","Ttl","UDP","UninitializedField","UnknownMethod","UnknownSdEntry","UnknownSdOption","UnknownService","ValidationError","WrongInterfaceVersion","WrongMessageType","WrongProtocolVersion","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","client_id","client_id","client_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","entries","entries_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eventgroup_id","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_reader","from_reader","from_slice","from_slice","has_ttl","has_ttl","hash","hash","hash","hash","hash","index1","index2","instance_id","instance_id","interface_version","interface_version","interface_version","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ip","is_ip4_option","is_ip6_option","is_ip_option","is_multicast_option","is_sd","is_service","len","length","length","length","major_version","major_version","message_id","message_id","message_id","message_len","message_type","message_type","message_type","method_id","minor_version","new","new","new","num1","num2","options","options","options","options","options_len","payload_len","port","proto","protocol_version","protocol_version","protocol_version","provide","provide","reboot_flag","request_id","request_id","request_id","return_code","return_code","return_code","service_id","service_id","service_id","session_id","session_id","session_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_vec","to_vec","to_writer","to_writer","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicast_flag","actual","min"],"q":[[0,"someip_messages"],[411,"someip_messages::Error"]],"d":["Represents the ClientId within the RequestID.","Magic Cookie Client RS_SOMEIP_00010","Magic Cookie Server RS_SOMEIP_00010","Different kinds of EntriesTyp accepted in a SdPayload.","Custom Error type","Error","Represents the EventgroupId within a SdEntry.","Find service","Find service entry","Represents the header of a SOME/IP message.","Builder for <code>Header</code>.","Error type for HeaderBuilder","Represents the InstanceId within a SdEntry.","Represents the InterfaceVersion within the header.","Invalid ip proto value","Invalid length field value","Invalid message type value","Invalid return code value","Invalid ip proto value","IO Error","Ip4 multicast endpoint option","Ip4 unicast endpoint option","Ip6 multicast endpoint option","Ip6 unicast endpoint option","Different kinds of IpProto accepted in a SdEndpointOption.","The fixed length of an item","Length trait for items with a fixed length.","Represents the MajorVersion within a SdEntry.","Deserialization error, so that payload cannot be …","Different kinds of SOME/IP messages.","Represents the MessageId within the header.","Different kinds of MessageType accepted in a header.","Represents the MethodId within the MessageId.","Represents the MinorVersion within a SdEntry.","A string or sequence with a minimum size (min_size for …","An unspecified error occurred","System running the service is not reachable (internal …","Service ID and Method ID are known. Application not …","Notification","Offer service","Offer service entry","No error occurred","Represents the ProtocolVersion within the header.","Request","Represents the RequestId within the header.","Rquest no return","Reserved for generic SOME/IP errors. These errors will be …","Reserved for specific errors of services and meth- ods. …","Repsonse","Different kinds of ReturnCode accepted in a header.","RPC Message","Represents the RpcPayload within a RPC message.","SD Message","Represents a SdEndpointOption within a SdPayload.","Different kinds of SdEntry accepted in a SdPayload.","Represents a SdEventgroupEntry within a SdPayload.","Represents the SdFlags within a SdPayload.","Different kinds of SdOption accepted in a SdPayload.","Represents the referenced options of a SdEntry.","Represents the SdPayload within a SD message.","Represents a SdServiceEntry within a SdPayload.","Represents the ServiceId within the MessageId.","Represents the SessionId within the RequestID.","Subscribe event group","Subscribe eventgroup entry","Subscribe event group ack","Subscribe eventgroup ack entry","Transmission Control Protocol (TCP)","A timeout occurred (internal error code only).","Tp error","Tp notification","Tp request","Tp request no return","Tp response","Represents the Ttl (Time to live) within a SdPayload.","User Datagram Protocol (UDP)","Uninitialized field","The requested Method ID is unknown. Service ID is known.","Unknown sd entry value","Unknown sd option value","The requested Service ID is unknown.","Custom validation error","Interface version mismatch","An unexpected message type was received (e.g. …","Version of SOME/IP protocol not supported","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>Header</code>.","Get client id","Get client id","Client id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Entries","Length of the payload’s entries in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Eventgroup id","Flags","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new SD option from type and endpoint","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Parse a header from a <code>Read</code>","Parse SD payload from a <code>Read</code>","Parse a message from a byte slice.","Parse a header from a byte slice.","Returns true if the entry has a positive ttl","Returns true if the entry has a positive ttl","","","","","","Index start of first options set","Index start of second options set","Instance id","Instance id","Interface version","Get interface version","Interface version","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","IP Address","Returns true if this is a IPv4 option","Returns true if this is a IPv6 option","Returns true if this is a IP option","Returns true if this is a multicast option","Returns true if the header indicates a SD message","Returns true if the entry type relates to a service","Length of the payload in bytes","Message length","Raw length field","Message length","Major version","Major version","Message id","Get message id","Message id","The length of the message associated with the header","Message type","Get message type","Message type","Method id","Minor version","Creates a new header with the given message id, length, …","Construct a new MessageId","Construct a new RequestId","Number of options within the first options set","Number of options within the second options set","Returns the associated options of an entry","Options","The options referenced by this entry","The options referenced by this entry","Length of the payload’s options in bytes","The length of the payload associated with the header","Port number","IP Protocol","Protocol version","Get protocol version","Protocol version","","","Returns true if the reboot flag is set","Request id","Get request id","Request id","Return code","Get return code","Return code","Service id","Service id","Service id","Get session id","Get session id","Session id","","","","","","","","","","","","","","","","","","Serializes the message into a byte array.","Serializes the header into a byte array.","Serialize the message into a writer.","Serialize the header into a writer.","Serializes the payload into a writer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TTL","TTL","","","","","","","","","","","","","","","","","","","Returns true if the unicast flag is set","The actual size received. For strings this is in bytes for …","The minimum size required. For strings this is in bytes …"],"i":[0,20,20,0,0,8,0,9,12,0,0,0,0,0,22,22,22,22,22,22,16,16,16,16,0,43,0,0,10,0,0,0,0,0,22,10,10,10,8,9,12,10,0,8,0,8,10,10,8,0,20,0,20,0,0,0,0,0,0,0,0,0,0,9,12,9,12,18,10,8,8,8,8,8,0,18,3,10,22,22,10,3,10,10,10,22,20,1,3,2,7,6,8,9,10,11,12,13,14,15,16,17,18,22,20,1,3,2,7,6,8,9,10,11,12,13,14,15,16,17,18,1,2,6,6,1,2,7,6,8,9,10,11,12,13,14,15,16,17,18,1,2,7,6,8,9,10,11,12,13,14,15,16,17,18,1,7,6,11,11,20,2,7,6,8,9,10,11,12,13,14,15,16,17,18,20,2,7,6,8,9,10,11,12,13,14,15,16,17,18,14,11,22,22,20,3,3,2,7,6,8,9,10,11,12,13,14,15,16,17,18,22,22,20,1,3,3,3,2,7,7,7,6,6,6,8,9,10,11,12,13,14,15,16,16,17,18,2,11,20,2,13,14,7,6,8,9,10,15,15,13,14,1,2,2,22,20,1,3,2,7,6,8,9,10,11,12,13,14,15,16,17,18,17,16,16,16,16,2,12,11,1,2,2,13,14,1,2,2,2,1,2,2,7,13,2,7,6,15,15,11,11,13,14,11,2,17,17,1,2,2,22,3,11,1,2,2,1,2,2,7,13,14,2,6,6,1,2,7,6,8,9,10,11,12,13,14,15,16,17,18,22,3,20,2,20,2,11,22,20,1,3,2,7,6,8,8,9,10,10,11,12,12,12,13,14,15,16,17,17,18,18,22,20,1,3,2,7,6,8,9,10,11,12,13,14,15,16,17,18,13,14,22,20,1,3,2,7,6,8,9,10,11,12,13,14,15,16,17,18,11,44,44],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[2,3]]]],[2,5],[6,5],0,[1,1],[2,2],[7,7],[6,6],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],7],[[],6],0,[11,19],[[20,20],21],[[2,2],21],[[7,7],21],[[6,6],21],[[8,8],21],[[9,9],21],[[10,10],21],[[11,11],21],[[12,12],21],[[13,13],21],[[14,14],21],[[15,15],21],[[16,16],21],[[17,17],21],[[18,18],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[22,23],24],[[22,23],24],[[20,23],24],[[3,23],24],[[3,23],24],[[2,23],24],[[7,23],24],[[6,23],24],[[8,23],24],[[9,23],24],[[10,23],24],[[11,23],24],[[12,23],24],[[13,23],24],[[14,23],24],[[15,23],24],[[16,23],24],[[17,23],24],[[18,23],24],[25,22],[[]],[[]],[[]],[[]],[26,3],[27,3],[[]],[[]],[[],7],[28,7],[[],6],[[]],[28,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,17],[[4,[16,22]]]],[[]],[[]],[[]],[30,[[4,[2,22]]]],[30,[[4,[11,22]]]],[[[31,[29]]],[[4,[20,22]]]],[[[31,[29]]],[[4,[2,22]]]],[13,21],[14,21],[[7,32]],[[6,32]],[[8,32]],[[9,32]],[[10,32]],0,0,0,0,[[1,33],1],[2,33],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[29,21],[29,21],[29,21],[29,21],[2,21],[29,21],[11,19],[[1,28],1],[2,28],0,0,0,[[1,7],1],[2,7],0,[2,19],[[1,8],1],[2,8],0,0,0,[[7,28,6,34,33,8,10],2],[[35,36],7],[[5,37],6],0,0,[[11,19],[[38,[17]]]],0,0,0,[11,19],[2,19],0,0,[[1,34],1],[2,34],0,[39],[39],[11,21],[[1,6],1],[2,6],0,[[1,10],1],[2,10],0,0,0,0,[2,37],[6,37],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[20,[[38,[29]]]],[2,[[38,[29]]]],[[20,40],[[4,[19,22]]]],[[2,40],[[4,[19,22]]]],[[11,40],[[4,[19,22]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[29,[[4,[8,22]]]],[[],4],[29,[[4,[10]]]],[[],4],[[],4],[[],[[4,[12,22]]]],[[],4],[[],[[4,[12,22]]]],[[],4],[[],4],[[],4],[[],4],[41,[[4,[17]]]],[[],4],[29,[[4,[18,22]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[11,21],0,0],"c":[],"p":[[3,"HeaderBuilder"],[3,"Header"],[4,"HeaderBuilderError"],[4,"Result"],[6,"ClientId"],[3,"RequestId"],[3,"MessageId"],[4,"MessageType"],[4,"EntriesType"],[4,"ReturnCode"],[3,"SdPayload"],[4,"SdEntry"],[3,"SdServiceEntry"],[3,"SdEventgroupEntry"],[3,"SdOptionRef"],[4,"SdOption"],[3,"SdEndpointOption"],[4,"IpProto"],[15,"usize"],[4,"Message"],[15,"bool"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"String"],[3,"UninitializedFieldError"],[15,"u32"],[15,"u8"],[8,"Read"],[15,"slice"],[8,"Hasher"],[6,"InterfaceVersion"],[6,"ProtocolVersion"],[6,"ServiceId"],[6,"MethodId"],[6,"SessionId"],[3,"Vec"],[3,"Demand"],[8,"Write"],[3,"Url"],[3,"TypeId"],[8,"Length"],[13,"NotEnoughData"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
